{
	"info": {
		"_postman_id": "1248e9db-5f2c-49d5-8407-6d0f0e4524be",
		"name": "VSRomana",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json()",
							"",
							"pm.environment.set(\"token\", jsonData.token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Right email is in response body\", function(){",
							"    pm.expect(\"qa1307@test.com\").to.eq(jsonData.user.email)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"qa1307@test.com\",\n    \"password\": \"tester987\",\n    \"g-recaptcha-response\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v2/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v2",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrganization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"",
							"pm.environment.set(\"organizationsId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{$randomWord}}",
							"type": "text"
						},
						{
							"key": "avatar_crop_cords",
							"value": "{}",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/romana/Desktop/322868_1100-800x825.jpg"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/v2/organizations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v2",
						"organizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrganization-with more than 255 characters-negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"pm.test(\"Message that name may not be greater than 255 characters is showing\", function(){",
							"    pm.expect(\"The name may not be greater than 255 characters.\").to.eq(jsonData.name[0])",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{$randomLoremParagraphs}}",
							"type": "text"
						},
						{
							"key": "avatar_crop_cords",
							"value": "{}",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/romana/Desktop/322868_1100-800x825.jpg"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/v2/organizations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v2",
						"organizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrganization without token-negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{$randomWord}}",
							"type": "text"
						},
						{
							"key": "avatar_crop_cords",
							"value": "{}",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/romana/Desktop/322868_1100-800x825.jpg"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/v2/organizations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v2",
						"organizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrganization-empty-name-negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"pm.test(\"Message that name is required is showing\", function(){",
							"    pm.expect(\"The name field is required.\").to.eq(jsonData.name[0])",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "",
							"type": "text"
						},
						{
							"key": "avatar_crop_cords",
							"value": "{}",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/romana/Desktop/322868_1100-800x825.jpg"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/v2/organizations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v2",
						"organizations"
					]
				}
			},
			"response": []
		}
	]
}